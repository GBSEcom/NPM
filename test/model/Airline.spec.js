/**
 * Payment Gateway API Specification
 * Payment Gateway API for payment processing. 
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FirstApiSdk);
  }
}(this, function(expect, FirstApiSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FirstApiSdk.Airline();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Airline', function() {
    it('should create an instance of Airline', function() {
      // uncomment below and update the code to test Airline
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be.a(FirstApiSdk.Airline);
    });

    it('should have the property passengerName (base name: "passengerName")', function() {
      // uncomment below and update the code to test the property passengerName
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be();
    });

    it('should have the property ticketNumber (base name: "ticketNumber")', function() {
      // uncomment below and update the code to test the property ticketNumber
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be();
    });

    it('should have the property issuingCarrier (base name: "issuingCarrier")', function() {
      // uncomment below and update the code to test the property issuingCarrier
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be();
    });

    it('should have the property carrierName (base name: "carrierName")', function() {
      // uncomment below and update the code to test the property carrierName
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be();
    });

    it('should have the property travelAgencyIataCode (base name: "travelAgencyIataCode")', function() {
      // uncomment below and update the code to test the property travelAgencyIataCode
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be();
    });

    it('should have the property travelAgencyName (base name: "travelAgencyName")', function() {
      // uncomment below and update the code to test the property travelAgencyName
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be();
    });

    it('should have the property airlinePlanNumber (base name: "airlinePlanNumber")', function() {
      // uncomment below and update the code to test the property airlinePlanNumber
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be();
    });

    it('should have the property airlineInvoiceNumber (base name: "airlineInvoiceNumber")', function() {
      // uncomment below and update the code to test the property airlineInvoiceNumber
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be();
    });

    it('should have the property reservationSystem (base name: "reservationSystem")', function() {
      // uncomment below and update the code to test the property reservationSystem
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be();
    });

    it('should have the property restricted (base name: "restricted")', function() {
      // uncomment below and update the code to test the property restricted
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be();
    });

    it('should have the property travelRoute (base name: "travelRoute")', function() {
      // uncomment below and update the code to test the property travelRoute
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be();
    });

    it('should have the property relatedTicketNumber (base name: "relatedTicketNumber")', function() {
      // uncomment below and update the code to test the property relatedTicketNumber
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be();
    });

    it('should have the property ancillaryServiceCategory (base name: "ancillaryServiceCategory")', function() {
      // uncomment below and update the code to test the property ancillaryServiceCategory
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be();
    });

    it('should have the property ticketPurchase (base name: "ticketPurchase")', function() {
      // uncomment below and update the code to test the property ticketPurchase
      //var instane = new FirstApiSdk.Airline();
      //expect(instance).to.be();
    });

  });

}));
