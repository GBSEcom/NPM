/**
 * Payment Gateway API Specification
 * Payment Gateway API for payment processing. 
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The StoredCredential model module.
* @module model/StoredCredential
* @version 6.3.0
*/
export default class StoredCredential {
    /**
    * Constructs a new <code>StoredCredential</code>.
    * Object for sending visa store credential
    * @alias module:model/StoredCredential
    * @class
    * @param sequence {module:model/StoredCredential.SequenceEnum} Indicates if the transaction is first or subsequent. Valid values are 'FIRST' and 'SUBSEQUENT'
    * @param scheduled {Boolean} Indicates if the transaction is scheduled or part of a installment
    */

    constructor(sequence, scheduled) {
        

        
        

        this['sequence'] = sequence;this['scheduled'] = scheduled;

        
    }

    /**
    * Constructs a <code>StoredCredential</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/StoredCredential} obj Optional instance to populate.
    * @return {module:model/StoredCredential} The populated <code>StoredCredential</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StoredCredential();

            
            
            

            if (data.hasOwnProperty('sequence')) {
                obj['sequence'] = ApiClient.convertToType(data['sequence'], 'String');
            }
            if (data.hasOwnProperty('scheduled')) {
                obj['scheduled'] = ApiClient.convertToType(data['scheduled'], 'Boolean');
            }
            if (data.hasOwnProperty('referencedSchemeTransactionId')) {
                obj['referencedSchemeTransactionId'] = ApiClient.convertToType(data['referencedSchemeTransactionId'], 'String');
            }
            if (data.hasOwnProperty('initiator')) {
                obj['initiator'] = ApiClient.convertToType(data['initiator'], 'String');
            }
        }
        return obj;
    }

    /**
    * Indicates if the transaction is first or subsequent. Valid values are 'FIRST' and 'SUBSEQUENT'
    * @member {module:model/StoredCredential.SequenceEnum} sequence
    */
    sequence = undefined;
    /**
    * Indicates if the transaction is scheduled or part of a installment
    * @member {Boolean} scheduled
    */
    scheduled = undefined;
    /**
    * The transaction id received from schemes for the initial transaction. Required if sequence is 'SUBSEQUENT'
    * @member {String} referencedSchemeTransactionId
    */
    referencedSchemeTransactionId = undefined;
    /**
    * Indicates whether it is a merchant initiated or explicitly consented by card holder. Valid values are 'MERCHANT' and 'CARDHOLDER'
    * @member {module:model/StoredCredential.InitiatorEnum} initiator
    */
    initiator = undefined;






    /**
    * Allowed values for the <code>sequence</code> property.
    * @enum {String}
    * @readonly
    */
    static SequenceEnum = {
    
        /**
         * value: "FIRST"
         * @const
         */
        "FIRST": "FIRST",
    
        /**
         * value: "SUBSEQUENT"
         * @const
         */
        "SUBSEQUENT": "SUBSEQUENT"    
    };

    /**
    * Allowed values for the <code>initiator</code> property.
    * @enum {String}
    * @readonly
    */
    static InitiatorEnum = {
    
        /**
         * value: "MERCHANT"
         * @const
         */
        "MERCHANT": "MERCHANT",
    
        /**
         * value: "CARDHOLDER"
         * @const
         */
        "CARDHOLDER": "CARDHOLDER"    
    };



}


