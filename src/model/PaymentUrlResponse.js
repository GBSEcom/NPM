/**
 * Payment Gateway API Specification
 * Payment Gateway API for payment processing. 
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The PaymentUrlResponse model module.
* @module model/PaymentUrlResponse
* @version 6.3.0
*/
export default class PaymentUrlResponse {
    /**
    * Constructs a new <code>PaymentUrlResponse</code>.
    * Response from embedded payment link request.
    * @alias module:model/PaymentUrlResponse
    * @class
    * @param clientRequestId {String} Echoes back the value in the Request header for tracking.
    * @param apiTraceId {String} Request identifier in API, can be used to request logs from the support.
    * @param requestStatus {module:model/PaymentUrlResponse.RequestStatusEnum} Request status. If it's anything other than 'SUCCESS', please refer to 400s HTTP error codes or decline. See Error object for details.
    */

    constructor(clientRequestId, apiTraceId, requestStatus) {
        

        
        

        this['clientRequestId'] = clientRequestId;this['apiTraceId'] = apiTraceId;this['requestStatus'] = requestStatus;

        
    }

    /**
    * Constructs a <code>PaymentUrlResponse</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/PaymentUrlResponse} obj Optional instance to populate.
    * @return {module:model/PaymentUrlResponse} The populated <code>PaymentUrlResponse</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentUrlResponse();

            
            
            

            if (data.hasOwnProperty('clientRequestId')) {
                obj['clientRequestId'] = ApiClient.convertToType(data['clientRequestId'], 'String');
            }
            if (data.hasOwnProperty('apiTraceId')) {
                obj['apiTraceId'] = ApiClient.convertToType(data['apiTraceId'], 'String');
            }
            if (data.hasOwnProperty('requestStatus')) {
                obj['requestStatus'] = ApiClient.convertToType(data['requestStatus'], 'String');
            }
            if (data.hasOwnProperty('orderId')) {
                obj['orderId'] = ApiClient.convertToType(data['orderId'], 'String');
            }
            if (data.hasOwnProperty('paymentUrl')) {
                obj['paymentUrl'] = ApiClient.convertToType(data['paymentUrl'], 'String');
            }
            if (data.hasOwnProperty('transactionId')) {
                obj['transactionId'] = ApiClient.convertToType(data['transactionId'], 'String');
            }
        }
        return obj;
    }

    /**
    * Echoes back the value in the Request header for tracking.
    * @member {String} clientRequestId
    */
    clientRequestId = undefined;
    /**
    * Request identifier in API, can be used to request logs from the support.
    * @member {String} apiTraceId
    */
    apiTraceId = undefined;
    /**
    * Request status. If it's anything other than 'SUCCESS', please refer to 400s HTTP error codes or decline. See Error object for details.
    * @member {module:model/PaymentUrlResponse.RequestStatusEnum} requestStatus
    */
    requestStatus = undefined;
    /**
    * Client Order ID if supplied by client, otherwise the Order ID.
    * @member {String} orderId
    */
    orderId = undefined;
    /**
    * @member {String} paymentUrl
    */
    paymentUrl = undefined;
    /**
    * ID code from the transaction.
    * @member {String} transactionId
    */
    transactionId = undefined;






    /**
    * Allowed values for the <code>requestStatus</code> property.
    * @enum {String}
    * @readonly
    */
    static RequestStatusEnum = {
    
        /**
         * value: "SUCCESS"
         * @const
         */
        "SUCCESS": "SUCCESS",
    
        /**
         * value: "VALIDATION_FAILED"
         * @const
         */
        "VALIDATION_FAILED": "VALIDATION_FAILED",
    
        /**
         * value: "PROCESSING_FAILED"
         * @const
         */
        "PROCESSING_FAILED": "PROCESSING_FAILED",
    
        /**
         * value: "FAILURE"
         * @const
         */
        "FAILURE": "FAILURE"    
    };



}


