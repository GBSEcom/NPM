/**
 * Payment Gateway API Specification
 * Payment Gateway API for payment processing. 
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import Amount from './Amount';
import BasketItem from './BasketItem';
import IndustrySpecificExtensions from './IndustrySpecificExtensions';
import Order from './Order';
import PaymentMethod from './PaymentMethod';
import PrimaryTransactionAdditionalDetails from './PrimaryTransactionAdditionalDetails';
import SplitShipment from './SplitShipment';
import StoredCredential from './StoredCredential';
import TransactionType from './TransactionType';





/**
* The PrimaryTransaction model module.
* @module model/PrimaryTransaction
* @version 6.3.0
*/
export default class PrimaryTransaction {
    /**
    * Constructs a new <code>PrimaryTransaction</code>.
    * Model for primary financial transactions
    * @alias module:model/PrimaryTransaction
    * @class
    * @param transactionType {module:model/TransactionType} 
    * @param amount {module:model/Amount} 
    * @param paymentMethod {module:model/PaymentMethod} 
    */

    constructor(transactionType, amount, paymentMethod) {
        

        
        

        this['transactionType'] = transactionType;this['amount'] = amount;this['paymentMethod'] = paymentMethod;

        
    }

    /**
    * Constructs a <code>PrimaryTransaction</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/PrimaryTransaction} obj Optional instance to populate.
    * @return {module:model/PrimaryTransaction} The populated <code>PrimaryTransaction</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PrimaryTransaction();

            
            
            

            if (data.hasOwnProperty('transactionType')) {
                obj['transactionType'] = TransactionType.constructFromObject(data['transactionType']);
            }
            if (data.hasOwnProperty('storeId')) {
                obj['storeId'] = ApiClient.convertToType(data['storeId'], 'String');
            }
            if (data.hasOwnProperty('clientTransactionId')) {
                obj['clientTransactionId'] = ApiClient.convertToType(data['clientTransactionId'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = Amount.constructFromObject(data['amount']);
            }
            if (data.hasOwnProperty('paymentMethod')) {
                obj['paymentMethod'] = PaymentMethod.constructFromObject(data['paymentMethod']);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = Order.constructFromObject(data['order']);
            }
            if (data.hasOwnProperty('basketItems')) {
                obj['basketItems'] = ApiClient.convertToType(data['basketItems'], [BasketItem]);
            }
            if (data.hasOwnProperty('splitShipment')) {
                obj['splitShipment'] = SplitShipment.constructFromObject(data['splitShipment']);
            }
            if (data.hasOwnProperty('additionalDetails')) {
                obj['additionalDetails'] = PrimaryTransactionAdditionalDetails.constructFromObject(data['additionalDetails']);
            }
            if (data.hasOwnProperty('industrySpecificExtensions')) {
                obj['industrySpecificExtensions'] = IndustrySpecificExtensions.constructFromObject(data['industrySpecificExtensions']);
            }
            if (data.hasOwnProperty('storedCredentials')) {
                obj['storedCredentials'] = StoredCredential.constructFromObject(data['storedCredentials']);
            }
        }
        return obj;
    }

    /**
    * @member {module:model/TransactionType} transactionType
    */
    transactionType = undefined;
    /**
    * An optional Outlet ID for clients that support multiple stores in the same app.
    * @member {String} storeId
    */
    storeId = undefined;
    /**
    * The unique client Transaction ID from the Request header, if supplied.
    * @member {String} clientTransactionId
    */
    clientTransactionId = undefined;
    /**
    * @member {module:model/Amount} amount
    */
    amount = undefined;
    /**
    * @member {module:model/PaymentMethod} paymentMethod
    */
    paymentMethod = undefined;
    /**
    * @member {module:model/Order} order
    */
    order = undefined;
    /**
    * Required for some payment methods (for example, Klarna)
    * @member {Array.<module:model/BasketItem>} basketItems
    */
    basketItems = undefined;
    /**
    * @member {module:model/SplitShipment} splitShipment
    */
    splitShipment = undefined;
    /**
    * @member {module:model/PrimaryTransactionAdditionalDetails} additionalDetails
    */
    additionalDetails = undefined;
    /**
    * @member {module:model/IndustrySpecificExtensions} industrySpecificExtensions
    */
    industrySpecificExtensions = undefined;
    /**
    * @member {module:model/StoredCredential} storedCredentials
    */
    storedCredentials = undefined;








}


