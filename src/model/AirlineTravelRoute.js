/**
 * Payment Gateway API Specification
 * Payment Gateway API for payment processing. 
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FirstDataGateway) {
      root.FirstDataGateway = {};
    }
    root.FirstDataGateway.AirlineTravelRoute = factory(root.FirstDataGateway.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The AirlineTravelRoute model module.
   * @module model/AirlineTravelRoute
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>AirlineTravelRoute</code>.
   * @alias module:model/AirlineTravelRoute
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>AirlineTravelRoute</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AirlineTravelRoute} obj Optional instance to populate.
   * @return {module:model/AirlineTravelRoute} The populated <code>AirlineTravelRoute</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('departureDate')) {
        obj['departureDate'] = ApiClient.convertToType(data['departureDate'], 'Date');
      }
      if (data.hasOwnProperty('origin')) {
        obj['origin'] = ApiClient.convertToType(data['origin'], 'String');
      }
      if (data.hasOwnProperty('destination')) {
        obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
      }
      if (data.hasOwnProperty('carrierCode')) {
        obj['carrierCode'] = ApiClient.convertToType(data['carrierCode'], 'String');
      }
      if (data.hasOwnProperty('serviceClass')) {
        obj['serviceClass'] = ApiClient.convertToType(data['serviceClass'], 'String');
      }
      if (data.hasOwnProperty('stopoverType')) {
        obj['stopoverType'] = ApiClient.convertToType(data['stopoverType'], 'String');
      }
      if (data.hasOwnProperty('fareBasisCode')) {
        obj['fareBasisCode'] = ApiClient.convertToType(data['fareBasisCode'], 'String');
      }
      if (data.hasOwnProperty('departureTax')) {
        obj['departureTax'] = ApiClient.convertToType(data['departureTax'], 'Number');
      }
      if (data.hasOwnProperty('flightNumber')) {
        obj['flightNumber'] = ApiClient.convertToType(data['flightNumber'], 'String');
      }
    }
    return obj;
  }

  /**
   * Date of departure
   * @member {Date} departureDate
   */
  exports.prototype['departureDate'] = undefined;
  /**
   * @member {String} origin
   */
  exports.prototype['origin'] = undefined;
  /**
   * @member {String} destination
   */
  exports.prototype['destination'] = undefined;
  /**
   * @member {String} carrierCode
   */
  exports.prototype['carrierCode'] = undefined;
  /**
   * @member {String} serviceClass
   */
  exports.prototype['serviceClass'] = undefined;
  /**
   * @member {module:model/AirlineTravelRoute.StopoverTypeEnum} stopoverType
   */
  exports.prototype['stopoverType'] = undefined;
  /**
   * @member {String} fareBasisCode
   */
  exports.prototype['fareBasisCode'] = undefined;
  /**
   * @member {Number} departureTax
   */
  exports.prototype['departureTax'] = undefined;
  /**
   * @member {String} flightNumber
   */
  exports.prototype['flightNumber'] = undefined;


  /**
   * Allowed values for the <code>stopoverType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StopoverTypeEnum = {
    /**
     * value: "DIRECT"
     * @const
     */
    "DIRECT": "DIRECT",
    /**
     * value: "STOPOVER"
     * @const
     */
    "STOPOVER": "STOPOVER"  };


  return exports;
}));


