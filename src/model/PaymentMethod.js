/**
 * Payment Gateway API Specification
 * Payment Gateway API for payment processing. 
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PayPal', 'model/PaymentCard', 'model/Sepa'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./PayPal'), require('./PaymentCard'), require('./Sepa'));
  } else {
    // Browser globals (root is window)
    if (!root.FirstApiSdk) {
      root.FirstApiSdk = {};
    }
    root.FirstApiSdk.PaymentMethod = factory(root.FirstApiSdk.ApiClient, root.FirstApiSdk.PayPal, root.FirstApiSdk.PaymentCard, root.FirstApiSdk.Sepa);
  }
}(this, function(ApiClient, PayPal, PaymentCard, Sepa) {
  'use strict';




  /**
   * The PaymentMethod model module.
   * @module model/PaymentMethod
   * @version 6.3.0
   */

  /**
   * Constructs a new <code>PaymentMethod</code>.
   * @alias module:model/PaymentMethod
   * @class
   * @param type {module:model/PaymentMethod.TypeEnum} The type of payment method. Note that PayPal can only process a 'Credit'  primary transaction with Order.Billing.Contact.email being mandatory. PayPal secondary transactions (void/return/postauth) are processed the same as any other secondary transactions.
   */
  var exports = function(type) {
    var _this = this;

    _this['type'] = type;



  };

  /**
   * Constructs a <code>PaymentMethod</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PaymentMethod} obj Optional instance to populate.
   * @return {module:model/PaymentMethod} The populated <code>PaymentMethod</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('paymentCard')) {
        obj['paymentCard'] = PaymentCard.constructFromObject(data['paymentCard']);
      }
      if (data.hasOwnProperty('sepa')) {
        obj['sepa'] = Sepa.constructFromObject(data['sepa']);
      }
      if (data.hasOwnProperty('payPal')) {
        obj['payPal'] = PayPal.constructFromObject(data['payPal']);
      }
    }
    return obj;
  }

  /**
   * The type of payment method. Note that PayPal can only process a 'Credit'  primary transaction with Order.Billing.Contact.email being mandatory. PayPal secondary transactions (void/return/postauth) are processed the same as any other secondary transactions.
   * @member {module:model/PaymentMethod.TypeEnum} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {module:model/PaymentCard} paymentCard
   */
  exports.prototype['paymentCard'] = undefined;
  /**
   * @member {module:model/Sepa} sepa
   */
  exports.prototype['sepa'] = undefined;
  /**
   * @member {module:model/PayPal} payPal
   */
  exports.prototype['payPal'] = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "PAYMENT_CARD"
     * @const
     */
    "PAYMENT_CARD": "PAYMENT_CARD",
    /**
     * value: "SEPA"
     * @const
     */
    "SEPA": "SEPA",
    /**
     * value: "PAYPAL"
     * @const
     */
    "PAYPAL": "PAYPAL"  };


  return exports;
}));


