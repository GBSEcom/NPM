/**
 * Payment Gateway API Specification
 * Payment Gateway API for payment processing. 
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import PayPal from './PayPal';
import PaymentCard from './PaymentCard';
import Sepa from './Sepa';





/**
* The PaymentMethod model module.
* @module model/PaymentMethod
* @version 6.3.0
*/
export default class PaymentMethod {
    /**
    * Constructs a new <code>PaymentMethod</code>.
    * @alias module:model/PaymentMethod
    * @class
    * @param type {module:model/PaymentMethod.TypeEnum} The type of payment method. Note that PayPal can only process a 'Credit'  primary transaction with Order.Billing.Contact.email being mandatory. PayPal secondary transactions (void/return/postauth) are processed the same as any other secondary transactions.
    */

    constructor(type) {
        

        
        

        this['type'] = type;

        
    }

    /**
    * Constructs a <code>PaymentMethod</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/PaymentMethod} obj Optional instance to populate.
    * @return {module:model/PaymentMethod} The populated <code>PaymentMethod</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentMethod();

            
            
            

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('paymentCard')) {
                obj['paymentCard'] = PaymentCard.constructFromObject(data['paymentCard']);
            }
            if (data.hasOwnProperty('sepa')) {
                obj['sepa'] = Sepa.constructFromObject(data['sepa']);
            }
            if (data.hasOwnProperty('payPal')) {
                obj['payPal'] = PayPal.constructFromObject(data['payPal']);
            }
        }
        return obj;
    }

    /**
    * The type of payment method. Note that PayPal can only process a 'Credit'  primary transaction with Order.Billing.Contact.email being mandatory. PayPal secondary transactions (void/return/postauth) are processed the same as any other secondary transactions.
    * @member {module:model/PaymentMethod.TypeEnum} type
    */
    type = undefined;
    /**
    * @member {module:model/PaymentCard} paymentCard
    */
    paymentCard = undefined;
    /**
    * @member {module:model/Sepa} sepa
    */
    sepa = undefined;
    /**
    * @member {module:model/PayPal} payPal
    */
    payPal = undefined;






    /**
    * Allowed values for the <code>type</code> property.
    * @enum {String}
    * @readonly
    */
    static TypeEnum = {
    
        /**
         * value: "PAYMENT_CARD"
         * @const
         */
        "PAYMENT_CARD": "PAYMENT_CARD",
    
        /**
         * value: "SEPA"
         * @const
         */
        "SEPA": "SEPA",
    
        /**
         * value: "PAYPAL"
         * @const
         */
        "PAYPAL": "PAYPAL"    
    };



}


