/**
 * Payment Gateway API Specification
 * Payment Gateway API for payment processing. 
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessTokenResponse', 'model/Address', 'model/Airline', 'model/AirlineAncillaryServiceCategory', 'model/AirlineTravelRoute', 'model/Amount', 'model/AmountComponents', 'model/AuthenticationResponseVerification', 'model/BasketItem', 'model/Billing', 'model/CarRental', 'model/CarRentalExtraCharges', 'model/CardVerificationsTransaction', 'model/ClientLocale', 'model/Contact', 'model/Error', 'model/ErrorDetails', 'model/ErrorResponse', 'model/Expiration', 'model/Frequency', 'model/IndustrySpecificExtensions', 'model/InstallmentOptions', 'model/Lodging', 'model/LodgingExtraCharges', 'model/Order', 'model/PayPal', 'model/PaymentCard', 'model/PaymentCardAuthenticationRequest', 'model/PaymentCardAuthenticationResult', 'model/PaymentMethod', 'model/PaymentSchedulesRequest', 'model/PaymentSchedulesResponse', 'model/PaymentUrlRequest', 'model/PaymentUrlResponse', 'model/PrimaryTransaction', 'model/PrimaryTransactionAdditionalDetails', 'model/ProcessorData', 'model/ResponseType', 'model/SecondaryTransaction', 'model/Sepa', 'model/SepaMandate', 'model/Shipping', 'model/SplitShipment', 'model/StoredCredential', 'model/TransactionResponse', 'model/TransactionResponseAuthenticationRedirect', 'model/TransactionResponseAuthenticationRedirectParams', 'model/TransactionType', 'model/TransactionErrorResponse', 'api/AuthenticationApi', 'api/OrderApi', 'api/PaymentApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccessTokenResponse'), require('./model/Address'), require('./model/Airline'), require('./model/AirlineAncillaryServiceCategory'), require('./model/AirlineTravelRoute'), require('./model/Amount'), require('./model/AmountComponents'), require('./model/AuthenticationResponseVerification'), require('./model/BasketItem'), require('./model/Billing'), require('./model/CarRental'), require('./model/CarRentalExtraCharges'), require('./model/CardVerificationsTransaction'), require('./model/ClientLocale'), require('./model/Contact'), require('./model/Error'), require('./model/ErrorDetails'), require('./model/ErrorResponse'), require('./model/Expiration'), require('./model/Frequency'), require('./model/IndustrySpecificExtensions'), require('./model/InstallmentOptions'), require('./model/Lodging'), require('./model/LodgingExtraCharges'), require('./model/Order'), require('./model/PayPal'), require('./model/PaymentCard'), require('./model/PaymentCardAuthenticationRequest'), require('./model/PaymentCardAuthenticationResult'), require('./model/PaymentMethod'), require('./model/PaymentSchedulesRequest'), require('./model/PaymentSchedulesResponse'), require('./model/PaymentUrlRequest'), require('./model/PaymentUrlResponse'), require('./model/PrimaryTransaction'), require('./model/PrimaryTransactionAdditionalDetails'), require('./model/ProcessorData'), require('./model/ResponseType'), require('./model/SecondaryTransaction'), require('./model/Sepa'), require('./model/SepaMandate'), require('./model/Shipping'), require('./model/SplitShipment'), require('./model/StoredCredential'), require('./model/TransactionResponse'), require('./model/TransactionResponseAuthenticationRedirect'), require('./model/TransactionResponseAuthenticationRedirectParams'), require('./model/TransactionType'), require('./model/TransactionErrorResponse'), require('./api/AuthenticationApi'), require('./api/OrderApi'), require('./api/PaymentApi'));
  }
}(function(ApiClient, AccessTokenResponse, Address, Airline, AirlineAncillaryServiceCategory, AirlineTravelRoute, Amount, AmountComponents, AuthenticationResponseVerification, BasketItem, Billing, CarRental, CarRentalExtraCharges, CardVerificationsTransaction, ClientLocale, Contact, Error, ErrorDetails, ErrorResponse, Expiration, Frequency, IndustrySpecificExtensions, InstallmentOptions, Lodging, LodgingExtraCharges, Order, PayPal, PaymentCard, PaymentCardAuthenticationRequest, PaymentCardAuthenticationResult, PaymentMethod, PaymentSchedulesRequest, PaymentSchedulesResponse, PaymentUrlRequest, PaymentUrlResponse, PrimaryTransaction, PrimaryTransactionAdditionalDetails, ProcessorData, ResponseType, SecondaryTransaction, Sepa, SepaMandate, Shipping, SplitShipment, StoredCredential, TransactionResponse, TransactionResponseAuthenticationRedirect, TransactionResponseAuthenticationRedirectParams, TransactionType, TransactionErrorResponse, AuthenticationApi, OrderApi, PaymentApi) {
  'use strict';

  /**
   * First Data Gateway RESTFUL API JavaScript SDK.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var FirstDataGateway = require('index'); // See note below*.
   * var xxxSvc = new FirstDataGateway.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new FirstDataGateway.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new FirstDataGateway.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new FirstDataGateway.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccessTokenResponse model constructor.
     * @property {module:model/AccessTokenResponse}
     */
    AccessTokenResponse: AccessTokenResponse,
    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address: Address,
    /**
     * The Airline model constructor.
     * @property {module:model/Airline}
     */
    Airline: Airline,
    /**
     * The AirlineAncillaryServiceCategory model constructor.
     * @property {module:model/AirlineAncillaryServiceCategory}
     */
    AirlineAncillaryServiceCategory: AirlineAncillaryServiceCategory,
    /**
     * The AirlineTravelRoute model constructor.
     * @property {module:model/AirlineTravelRoute}
     */
    AirlineTravelRoute: AirlineTravelRoute,
    /**
     * The Amount model constructor.
     * @property {module:model/Amount}
     */
    Amount: Amount,
    /**
     * The AmountComponents model constructor.
     * @property {module:model/AmountComponents}
     */
    AmountComponents: AmountComponents,
    /**
     * The AuthenticationResponseVerification model constructor.
     * @property {module:model/AuthenticationResponseVerification}
     */
    AuthenticationResponseVerification: AuthenticationResponseVerification,
    /**
     * The BasketItem model constructor.
     * @property {module:model/BasketItem}
     */
    BasketItem: BasketItem,
    /**
     * The Billing model constructor.
     * @property {module:model/Billing}
     */
    Billing: Billing,
    /**
     * The CarRental model constructor.
     * @property {module:model/CarRental}
     */
    CarRental: CarRental,
    /**
     * The CarRentalExtraCharges model constructor.
     * @property {module:model/CarRentalExtraCharges}
     */
    CarRentalExtraCharges: CarRentalExtraCharges,
    /**
     * The CardVerificationsTransaction model constructor.
     * @property {module:model/CardVerificationsTransaction}
     */
    CardVerificationsTransaction: CardVerificationsTransaction,
    /**
     * The ClientLocale model constructor.
     * @property {module:model/ClientLocale}
     */
    ClientLocale: ClientLocale,
    /**
     * The Contact model constructor.
     * @property {module:model/Contact}
     */
    Contact: Contact,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The ErrorDetails model constructor.
     * @property {module:model/ErrorDetails}
     */
    ErrorDetails: ErrorDetails,
    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse: ErrorResponse,
    /**
     * The Expiration model constructor.
     * @property {module:model/Expiration}
     */
    Expiration: Expiration,
    /**
     * The Frequency model constructor.
     * @property {module:model/Frequency}
     */
    Frequency: Frequency,
    /**
     * The IndustrySpecificExtensions model constructor.
     * @property {module:model/IndustrySpecificExtensions}
     */
    IndustrySpecificExtensions: IndustrySpecificExtensions,
    /**
     * The InstallmentOptions model constructor.
     * @property {module:model/InstallmentOptions}
     */
    InstallmentOptions: InstallmentOptions,
    /**
     * The Lodging model constructor.
     * @property {module:model/Lodging}
     */
    Lodging: Lodging,
    /**
     * The LodgingExtraCharges model constructor.
     * @property {module:model/LodgingExtraCharges}
     */
    LodgingExtraCharges: LodgingExtraCharges,
    /**
     * The Order model constructor.
     * @property {module:model/Order}
     */
    Order: Order,
    /**
     * The PayPal model constructor.
     * @property {module:model/PayPal}
     */
    PayPal: PayPal,
    /**
     * The PaymentCard model constructor.
     * @property {module:model/PaymentCard}
     */
    PaymentCard: PaymentCard,
    /**
     * The PaymentCardAuthenticationRequest model constructor.
     * @property {module:model/PaymentCardAuthenticationRequest}
     */
    PaymentCardAuthenticationRequest: PaymentCardAuthenticationRequest,
    /**
     * The PaymentCardAuthenticationResult model constructor.
     * @property {module:model/PaymentCardAuthenticationResult}
     */
    PaymentCardAuthenticationResult: PaymentCardAuthenticationResult,
    /**
     * The PaymentMethod model constructor.
     * @property {module:model/PaymentMethod}
     */
    PaymentMethod: PaymentMethod,
    /**
     * The PaymentSchedulesRequest model constructor.
     * @property {module:model/PaymentSchedulesRequest}
     */
    PaymentSchedulesRequest: PaymentSchedulesRequest,
    /**
     * The PaymentSchedulesResponse model constructor.
     * @property {module:model/PaymentSchedulesResponse}
     */
    PaymentSchedulesResponse: PaymentSchedulesResponse,
    /**
     * The PaymentUrlRequest model constructor.
     * @property {module:model/PaymentUrlRequest}
     */
    PaymentUrlRequest: PaymentUrlRequest,
    /**
     * The PaymentUrlResponse model constructor.
     * @property {module:model/PaymentUrlResponse}
     */
    PaymentUrlResponse: PaymentUrlResponse,
    /**
     * The PrimaryTransaction model constructor.
     * @property {module:model/PrimaryTransaction}
     */
    PrimaryTransaction: PrimaryTransaction,
    /**
     * The PrimaryTransactionAdditionalDetails model constructor.
     * @property {module:model/PrimaryTransactionAdditionalDetails}
     */
    PrimaryTransactionAdditionalDetails: PrimaryTransactionAdditionalDetails,
    /**
     * The ProcessorData model constructor.
     * @property {module:model/ProcessorData}
     */
    ProcessorData: ProcessorData,
    /**
     * The ResponseType model constructor.
     * @property {module:model/ResponseType}
     */
    ResponseType: ResponseType,
    /**
     * The SecondaryTransaction model constructor.
     * @property {module:model/SecondaryTransaction}
     */
    SecondaryTransaction: SecondaryTransaction,
    /**
     * The Sepa model constructor.
     * @property {module:model/Sepa}
     */
    Sepa: Sepa,
    /**
     * The SepaMandate model constructor.
     * @property {module:model/SepaMandate}
     */
    SepaMandate: SepaMandate,
    /**
     * The Shipping model constructor.
     * @property {module:model/Shipping}
     */
    Shipping: Shipping,
    /**
     * The SplitShipment model constructor.
     * @property {module:model/SplitShipment}
     */
    SplitShipment: SplitShipment,
    /**
     * The StoredCredential model constructor.
     * @property {module:model/StoredCredential}
     */
    StoredCredential: StoredCredential,
    /**
     * The TransactionResponse model constructor.
     * @property {module:model/TransactionResponse}
     */
    TransactionResponse: TransactionResponse,
    /**
     * The TransactionResponseAuthenticationRedirect model constructor.
     * @property {module:model/TransactionResponseAuthenticationRedirect}
     */
    TransactionResponseAuthenticationRedirect: TransactionResponseAuthenticationRedirect,
    /**
     * The TransactionResponseAuthenticationRedirectParams model constructor.
     * @property {module:model/TransactionResponseAuthenticationRedirectParams}
     */
    TransactionResponseAuthenticationRedirectParams: TransactionResponseAuthenticationRedirectParams,
    /**
     * The TransactionType model constructor.
     * @property {module:model/TransactionType}
     */
    TransactionType: TransactionType,
    /**
     * The TransactionErrorResponse model constructor.
     * @property {module:model/TransactionErrorResponse}
     */
    TransactionErrorResponse: TransactionErrorResponse,
    /**
     * The AuthenticationApi service constructor.
     * @property {module:api/AuthenticationApi}
     */
    AuthenticationApi: AuthenticationApi,
    /**
     * The OrderApi service constructor.
     * @property {module:api/OrderApi}
     */
    OrderApi: OrderApi,
    /**
     * The PaymentApi service constructor.
     * @property {module:api/PaymentApi}
     */
    PaymentApi: PaymentApi
  };

  return exports;
}));
